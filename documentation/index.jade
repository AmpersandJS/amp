block vars
  - var bodyClass = "docs-page"

mixin renderDep(obj, first)
  if (first && !obj.deps.length)
    p (none)
  else
    ul
      each dep in obj.deps
        li
          a(href='#' + dep.data.name)= dep.data.name
          if (dep.deps.length)
            +renderDep(dep)


extends templates/layout

block content

  .docs.cf
    nav.nav-docs
      a.logo.logo-ampersand(href="/")
      a.section-top(href='#intro') Introduction
      a.section-top.external(href='http://ampersandjs.com') Ampersand.js
      a.section-top.external(href='https://github.com/ampersandjs/amp') GitHub Project
      a.section-top.external(href='https://github.com/ampersandjs/amp/issues') Bugs
      a.section-top.external(href='#sizes') Filesizes
      - var lastCategory;
      for module, key in globals[0].packages
        - if (lastCategory !== module.category)
          - lastCategory = module.category
          a.section-top(href= '#')= module.category
        a.section-sub(href= '#' + module.name)!= module.name

    .docs-content
      section
        a.anchor(name= "intro", href= '#intro')
          h1
            span.header-link
            | Amp &mdash; #{globals[0].numberOfModules} utility functions as individual npm modules

        .illustration.amp
          img(src="/documentation/public/images/ampersand-amp.svg")

        p This page is the consolidated reference for all the amp modules in a single page for the sake of being 'cmd+f' friendly.

        p All modules are unit tested in a wide range of browsers (including IE6+) with a CI system composed of <a href="https://saucelabs.com">SauceLabs</a> and <a href="https://travis-ci.org/AmpersandJS/amp">Travis CI</a> by using <a href="https://www.npmjs.org/package/zuul">zuul</a> and <a href="https://www.npmjs.org/package/tape">tape</a>.

        p Project goals:

        ul
          li Excellent, cross-browser test coverage
          li Independently maintained and versioned
          li Strict semver for versioning
          li Try very hard to maintain APIs, ideally staying on <code>1.x.x</code> version
          li Try to consider the published versions "done" code
          li Provide easy to remember names (by using namespacing)
          li Minimize unneeded interdependencies

        p Many of the tests and implementations were ported from <a href="http://underscorejs.org/">Underscore.js</a> in order to benefit from its battle-tested code. Much props to <a href="https://twitter.com/jashkenas">Jeremy Ashkenas</a> and the other underscore contributors. This project would not exist if not for them and underscore's generous MIT license.

      section
        a.anchor(name= 'sizes', href= '#sizes')
          h2
            span.header-link
            | How filesizes are calculated

        p To give you a rough idea of what impact a given module will have on a browserify bundle's filesize we calculate it as follows:

        pre
          |    amp module (browserified, min + gzip)
          |  - empty file (browserified, min + gzip)
          | ----------------------------------------
          |       estimated weight added to your app

        p However, this is still a flawed estimate since if you use multiple amp modules, the actual de-duped size will be even small since they likely share dependencies.

      for module, key in globals[0].packages
        section.module
          a.anchor(name= module.name, href= '#' + module.name)
            h1
              span.header-link
              | #{module.name}
          .module-card
            h4.module-name #{module.name}
            p.module-version= 'v' + module.pack.version
            p.module-links
              a(href='https://www.npmjs.org/package/#{module.name}') npm
              a(href='https://github.com/ampersandjs/amp/tree/master/modules/#{module.bareName}') github

          div
            if module.lodash
              h3 Lodash Version: <a href="https://www.npmjs.com/package/#{module.lodash}">#{module.lodash}</a>
              div The lodash project now has an independently versioned module that serves the same purpose as this. We recommend you use it for new projects. See <a href="http://blog.andyet.com/2015/03/25/amped-down">this post</a> for more details.

            h3 Docs

            div!= module.docHtml

            h3 Example Usage
            pre
              code.lang-javascript.hljs= module.exampleCode

            .code
              button.toggle Show the code
              pre(style='display: none')
                code.lang-javascript.hljs= module.code

            .tests
              button.toggle Show the tests
              pre(style='display: none')
                code.lang-javascript.hljs= module.test

            h3 Estimated bundle size increase

            p ~#{module.pack.amp.size.minified} (
              a(href='#sizes') details
              | )

            h4 Dependencies

            div(style='display: none')
              +renderDep(module.dependencyTree, true)

            div.dependency-list
              - if (Object.keys(module.dependencyList).length)
                ul
                  for dep, key in module.dependencyList
                    li
                      a(href='#' + dep.name)= dep.name
              - else
                p none


          div!= module.html

  script(src="/documentation/public/js/setup.js")
